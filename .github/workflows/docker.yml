name: Docker Build & Test

# Triggers
"on":
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

# Environment variables
env:
  IMAGE_NAME: stock-screener
  REGISTRY: ghcr.io

# Jobs
jobs:
  docker-build:
    name: Build & Test Docker Image
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test Docker image - Health Check
        run: |
          echo "üîç Testing Docker image health check..."
          docker run --rm ${{ env.IMAGE_NAME }}:test --health-check
      
      - name: Test Docker image - Basic Functionality
        run: |
          echo "üß™ Testing Docker image basic functionality..."
          timeout 30 docker run --rm ${{ env.IMAGE_NAME }}:test --symbols AAPL --quiet || true
          echo "‚úÖ Basic functionality test completed"
      
      - name: Test Docker image - Market Analysis
        run: |
          echo "üìä Testing Docker image market analysis mode..."
          timeout 30 docker run --rm ${{ env.IMAGE_NAME }}:test --mode market-analysis --symbols AAPL MSFT --quiet || true
          echo "‚úÖ Market analysis test completed"
      
      - name: Security scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:test
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Image digest
        if: github.event_name != 'pull_request'
        run: echo ${{ steps.meta.outputs.digest }}

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run Hadolint (Dockerfile linter)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: warning
      
      - name: Build image for security scan
        run: |
          docker build -t security-scan:latest .
      
      - name: Run comprehensive security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: security-scan:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH' 